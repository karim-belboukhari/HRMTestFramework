{"uid":"c760cc0b159d97d","name":"test_login_with_empty_fields[edge]","fullName":"tests.test_login.TestLogin#test_login_with_empty_fields","historyId":"f9f3fb34d324b97ab5b1d60e13c333d7","time":{"start":1725241870598,"stop":1725241873660,"duration":3062},"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <tests.test_login.TestLogin object at 0x0000020171AC2600>, setup = <selenium.webdriver.edge.webdriver.WebDriver (session=\"47bd314dcd9fbc66d4bffb5636c6515c\")>\nrequest = <FixtureRequest for <Function test_login_with_empty_fields[edge]>>\n\n    def test_login_with_empty_fields(self,setup, request):\n        self.logger.info(\"***************verifying the test_login_with_empty_fields****************\")\n    \n        driver = setup\n        login= Login(driver)\n        login.set_username(\"\")\n        login.set_password(\"\")\n        login.click_login()\n    \n        empty_username_error = login.get_empty_username_error()\n        empty_password_error = login.get_empty_password_error()\n    \n        if (empty_username_error in [\"Requiredsz\", \"Obligatoiresz\"]) and (empty_password_error in [\"Required\", \"Obligatoire\"]):\n    \n            assert True\n            self.logger.info(\"***************test_login_with_empty_fields passed****************\")\n        else:\n            self.logger.info(\"***************test_login_with_empty_fields failed****************\")\n            test_name = request.node.name\n            screenshots = os.path.join(os.path.dirname(__file__), '..', 'screenshots', f'{test_name}.png')\n            time.sleep(2)\n            driver.save_screenshot(screenshots)\n            with open(screenshots, \"rb\") as image_file:\n                allure.attach(image_file.read(), name=f'Screenshot for {test_name}',  attachment_type=allure.attachment_type.PNG)\n>           assert False\nE           assert False\n\ntests\\test_login.py:89: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"setup","time":{"start":1725241855682,"stop":1725241870597,"duration":14915},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <tests.test_login.TestLogin object at 0x0000020171AC2600>, setup = <selenium.webdriver.edge.webdriver.WebDriver (session=\"47bd314dcd9fbc66d4bffb5636c6515c\")>\nrequest = <FixtureRequest for <Function test_login_with_empty_fields[edge]>>\n\n    def test_login_with_empty_fields(self,setup, request):\n        self.logger.info(\"***************verifying the test_login_with_empty_fields****************\")\n    \n        driver = setup\n        login= Login(driver)\n        login.set_username(\"\")\n        login.set_password(\"\")\n        login.click_login()\n    \n        empty_username_error = login.get_empty_username_error()\n        empty_password_error = login.get_empty_password_error()\n    \n        if (empty_username_error in [\"Requiredsz\", \"Obligatoiresz\"]) and (empty_password_error in [\"Required\", \"Obligatoire\"]):\n    \n            assert True\n            self.logger.info(\"***************test_login_with_empty_fields passed****************\")\n        else:\n            self.logger.info(\"***************test_login_with_empty_fields failed****************\")\n            test_name = request.node.name\n            screenshots = os.path.join(os.path.dirname(__file__), '..', 'screenshots', f'{test_name}.png')\n            time.sleep(2)\n            driver.save_screenshot(screenshots)\n            with open(screenshots, \"rb\") as image_file:\n                allure.attach(image_file.read(), name=f'Screenshot for {test_name}',  attachment_type=allure.attachment_type.PNG)\n>           assert False\nE           assert False\n\ntests\\test_login.py:89: AssertionError","steps":[],"attachments":[{"uid":"1c7a5457a9968aef","name":"Screenshot for test_login_with_empty_fields[edge]","source":"1c7a5457a9968aef.png","type":"image/png","size":83651},{"uid":"c74a36bb1c3fad0a","name":"log","source":"c74a36bb1c3fad0a.txt","type":"text/plain","size":220}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"setup::0","time":{"start":1725241873669,"stop":1725241875919,"duration":2250},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"severity","value":"blocker"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"CNXFCM5LHW3MGRL"},{"name":"thread","value":"25352-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"setup","value":"'edge'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[{"uid":"3dd1e5a7acd095c0","status":"passed","time":{"start":1725241383084,"stop":1725241383888,"duration":804}},{"uid":"f76114b05897a254","status":"passed","time":{"start":1725241255991,"stop":1725241256810,"duration":819}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c760cc0b159d97d.json","parameterValues":["'edge'"]}