{"name": "test_addcandidate[edge]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@class='oxd-main-menu-item' and @href='/web/index.php/recruitment/viewRecruitmentModule']\"}\n  (Session info: MicrosoftEdge=128.0.2739.54); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF7EA8F3A52+10594]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF7EA890479+323337]\n\t(No symbol) [0x00007FF7EA6AF16E]\n\t(No symbol) [0x00007FF7EA6F656E]\n\t(No symbol) [0x00007FF7EA6F65F5]\n\t(No symbol) [0x00007FF7EA734157]\n\t(No symbol) [0x00007FF7EA717BBF]\n\t(No symbol) [0x00007FF7EA6EBEDD]\n\t(No symbol) [0x00007FF7EA731B07]\n\t(No symbol) [0x00007FF7EA7177E3]\n\t(No symbol) [0x00007FF7EA6EB3EC]\n\t(No symbol) [0x00007FF7EA6EA8CD]\n\t(No symbol) [0x00007FF7EA6EAFB1]\n\tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF7EAA7E4F4+918756]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF7EA81C9BF+54575]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF7EA80F557+199]\n\tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF7EAA7D27D+914029]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF7EA897F01+354705]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF7EA8943B4+339524]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF7EA8944E9+339833]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF7EA88ADAC+301116]\n\t(No symbol) [0x00007FFAF5027374]\n\tRtlUserThreadStart [0x00007FFAF5CBCC91+33]", "trace": "self = <tests.test_add_candidate.Test_Add_Candidate object at 0x0000021E3A7DCEF0>\nsetup = <selenium.webdriver.edge.webdriver.WebDriver (session=\"ed8745ef9d7608e65ce0f77a5e88ba8e\")>\n\n    @pytest.mark.Sanity\n    def test_addcandidate(self, setup):\n        self.loggin.info(\"***********************test_addcandidate started**********************\")\n        driver = setup\n        Lp = Login(driver)\n        Lp.set_username(self.email)\n        Lp.set_password(self.password)\n        Lp.click_login()\n        self.loggin.info(\"***********************logging passed**********************\")\n        AddCand = AddCandidate(driver)\n>       AddCand.set_candidate()\n\ntests\\test_add_candidate.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\add_candidatepage.py:24: in set_candidate\n    self.driver.find_element(By.XPATH, self.recuitement_flow).click()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000021E3A40C5F0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...x00007FF7EA88ADAC+301116]\\\\n\\\\t(No symbol) [0x00007FFAF5027374]\\\\n\\\\tRtlUserThreadStart [0x00007FFAF5CBCC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@class='oxd-main-menu-item' and @href='/web/index.php/recruitment/viewRecruitmentModule']\"}\nE         (Session info: MicrosoftEdge=128.0.2739.54); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7EA8F3A52+10594]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF7EA890479+323337]\nE       \t(No symbol) [0x00007FF7EA6AF16E]\nE       \t(No symbol) [0x00007FF7EA6F656E]\nE       \t(No symbol) [0x00007FF7EA6F65F5]\nE       \t(No symbol) [0x00007FF7EA734157]\nE       \t(No symbol) [0x00007FF7EA717BBF]\nE       \t(No symbol) [0x00007FF7EA6EBEDD]\nE       \t(No symbol) [0x00007FF7EA731B07]\nE       \t(No symbol) [0x00007FF7EA7177E3]\nE       \t(No symbol) [0x00007FF7EA6EB3EC]\nE       \t(No symbol) [0x00007FF7EA6EA8CD]\nE       \t(No symbol) [0x00007FF7EA6EAFB1]\nE       \tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF7EAA7E4F4+918756]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF7EA81C9BF+54575]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF7EA80F557+199]\nE       \tMicrosoft::Applications::Events::EventProperty::empty [0x00007FF7EAA7D27D+914029]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF7EA897F01+354705]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF7EA8943B4+339524]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF7EA8944E9+339833]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF7EA88ADAC+301116]\nE       \t(No symbol) [0x00007FFAF5027374]\nE       \tRtlUserThreadStart [0x00007FFAF5CBCC91+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "log", "source": "d4471dab-046a-48d1-bacf-380592f9d294-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "setup", "value": "'edge'"}], "start": 1725229802754, "stop": 1725229824700, "uuid": "bc729849-11dd-43ed-a7b1-351031daa866", "historyId": "4069e0a272daf585af46284fe3c221d5", "testCaseId": "f2b64ba14fad880b7fa63dad87fd7570", "fullName": "tests.test_add_candidate.Test_Add_Candidate#test_addcandidate", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "Sanity"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_add_candidate"}, {"name": "subSuite", "value": "Test_Add_Candidate"}, {"name": "host", "value": "CNXFCM5LHW3MGRL"}, {"name": "thread", "value": "24740-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_add_candidate"}]}